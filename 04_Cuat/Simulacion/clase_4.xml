Recursion-1 > factorial 


    public int factorial(int n) {

      if(n==0 || n==1){
        return 1;
      }else{
        return n* factorial(n-1);
      }

    }


Recursion-1 > bunnyEars 

    public int bunnyEars(int bunnies) {
      if(bunnies == 0){
          return 0;
        }else{
          return bunnyEars(bunnies-1)+2;
        }
    }
    
    

Recursion-1 > fibonacci 

    public int fibonacci(int n) {
      if(n == 0){
        return 0;
      }else if (n == 1){
        return 1;
      }else{
        return fibonacci(n-1)+fibonacci(n-2);
      }
    }
    
    
Recursion-1 > bunnyEars2 

    public int bunnyEars2(int bunnies) {
        if(bunnies == 0){
          return 0;
        }else if((bunnies % 2) == 0){
          return bunnyEars2(bunnies-1)+3;
        }else{
          return bunnyEars2(bunnies-1)+2;
        }
    }



Recursion-1 > triangle 

    public int triangle(int rows) {
      if(rows == 0){
        return 0;
      }else if (rows == 1){
        return 1;
      }else{
        return triangle(rows-1)+rows;
      }
    }



Recursion-1 > sumDigits

    public int sumDigits(int n) {
      if(n/10 < 1){
        return n;
      }else{
        return sumDigits(n/10)+sumDigits(n%10);
      }
    }
